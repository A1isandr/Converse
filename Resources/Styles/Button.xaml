<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="CommonButton"
           TargetType="Button">

        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource CommonButtonBackgroundBrush}"/>
        <Setter Property="Padding" Value="2, 0, 2, 0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    
                    <Border x:Name="ButtonBorder"
                        CornerRadius="10"
                        Cursor="{TemplateBinding Cursor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}">

                        <Border x:Name="ButtonOverlay"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{Binding ElementName=ButtonBorder, Path=CornerRadius, FallbackValue=0}">

                            <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="ButtonOverlay"
                                Property="Background"
                                Value="{StaticResource CommonButtonMouseOverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter
                                TargetName="ButtonBorder"
                                Property="BorderBrush"
                                Value="{StaticResource AccentGradientBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SvgResponsiveButton"
           TargetType="Button"
           BasedOn="{StaticResource CommonButton}">
        
        <Setter Property="Foreground" Value="{StaticResource SvgResponsiveButtonFillBrush}"/>
        <Setter Property="Padding" Value="3, 0, 3, 0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">

                    <Border x:Name="ButtonBorder"
                        CornerRadius="10"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">

                        <Path x:Name="SvgIcon"
                            Fill="{TemplateBinding Foreground}"
                            Data="{TemplateBinding Content}"
                            Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource AccentGradientBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter 
                                TargetName="ButtonBorder"
                                Property="BorderBrush"
                                Value="{StaticResource AccentGradientBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowHeaderButton"
           TargetType="Button"
           BasedOn="{StaticResource SvgResponsiveButton}">
        
        <Setter Property="Foreground" Value="{StaticResource HeaderButtonsForegroundFillBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource HeaderButtonsBackgroundBrush}"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Padding" Value="8, 0, 8, 0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource HeaderButtonsMouseOverForegroundFillBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseWindowHeaderButton"
       TargetType="Button"
       BasedOn="{StaticResource WindowHeaderButton}">
        
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    Color="{StaticResource CloseWindowButtonDropShadowEffectColor}"
                    BlurRadius="0"
                    Opacity="0"
                    ShadowDepth="0"
                    Direction="0"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.Opacity"
                            To="1" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.BlurRadius"
                            To="50" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.Opacity"
                            To="0" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation
                            Storyboard.TargetProperty="Effect.BlurRadius"
                            To="0" 
                            Duration="0:0:0.3">

                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter
                    Property="Background"
                    Value="{StaticResource CloseWindowButtonMouseOverBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UserPreviewButton"
           TargetType="Button"
           BasedOn="{StaticResource CommonButton}">

            
    </Style>
</ResourceDictionary>